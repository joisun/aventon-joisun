name: Deploy Joi-Users application

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

        # set node & pnpm
      - name: Set package manager
        uses: pnpm/action-setup@v4
        with:
          version: 8
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          #   https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#caching-packages-data
          cache-dependency-path: |
            web/pnpm-lock.yaml
            server/pnpm-lock.yaml

        # build web
      - name: Install web dependencies
        working-directory: ./web
        run: pnpm install
      - name: Build web application
        working-directory: ./web
        run: pnpm build

        # build server
      - name: Install server dependencies
        working-directory: ./server
        run: pnpm install
      - name: Build server application
        working-directory: ./server
        run: pnpm run build

        # Copy Dist to EC2
      - name: Collect web and server build result
        run: |
          mkdir -p output/web
          mkdir -p output/server
          cp -r ./web/dist/* output/web
          cp ./web/Dockerfile output/web
          cp -r ./server/dist/* output/server
          cp -r ./server/prisma output/server
          cp ./server/package.json output/server
          cp ./server/pnpm-lock.yaml output/server
          cp ./server/Dockerfile output/server
          cp ./docker-compose.yml output/docker-compose.yml
          tar -czf app.tar.gz -C output .
      - name: Copy dists to AWS EC2
        uses: appleboy/scp-action@v0.1.7 #https://github.com/marketplace/actions/scp-command-to-transfer-files
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          rm: true # delete folder before upload new file, https://github.com/appleboy/scp-action/tree/v0.1.7/?tab=readme-ov-file#input-variables
          source: "./app.tar.gz"
          target: "${{ secrets.MOUNT_POINT }}"

        # Extract Dists on EC2
      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3 #https://github.com/marketplace/actions/ssh-remote-commands
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            cd ${{ secrets.MOUNT_POINT }}
            tar -xzf app.tar.gz -C .
            export DATABASE_URL=${{ secrets.DATABASE_URL }}
            export MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
            export MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
            docker-compose up -d
